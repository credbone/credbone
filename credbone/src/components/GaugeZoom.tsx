import React, { useId } from "react";

interface GaugeZoomProps {
  value: number;
  max: number;
  size: number;
}

const GaugeZoom: React.FC<GaugeZoomProps> = ({ value, max, size }) => {
  // const radius = size / 2 - 15;
  // const circumference = 2 * Math.PI * radius;
  // const offset = circumference - (value / max) * circumference;

  const maskid = useId();

  return (
    <svg
    data-position="absolute"
            preserveAspectRatio="none"
      height="220%"
    //  width="100%"
      viewBox="0 0 140 140"
      xmlns="http://www.w3.org/2000/svg"

      transform={"rotate(" + (-((value / max || 0) * 360) - 90) + ")"}
 data-duration=".725"
   //   data-rotate="-225"
    >






      <g

       // data-opacity="10"
        fill="currentColor"
        transform-origin="center center"
              //  data-duration=".325"
         // transform={"rotate(" + (value / max || 0) * 360 + ")"}

      >

  <path  d="M111.816,70.307V69.9H120v0.409h-8.184v0Zm-0.166-4.066,7.908-.692,0.036,0.407-7.908.692C111.675,66.512,111.662,66.377,111.65,66.241Zm-0.48-3.625,7.821-1.379,0.071,0.4-7.825,1.38C111.214,62.885,111.194,62.75,111.17,62.616Zm-0.8-3.567,7.68-2.059,0.106,0.395-7.68,2.058c-0.035-.132-0.076-0.263-0.108-0.394h0Zm-1.107-3.484,7.481-2.723,0.14,0.384L109.4,55.95c-0.047-.128-0.092-0.257-0.139-0.385h0ZM107.85,52.2l7.229-3.372,0.173,0.37-7.229,3.372-0.175-.37h0Zm-1.756-3.328,7-4.044,0.2,0.354-7,4.043c-0.062-.12-0.133-0.235-0.2-0.353h0Zm-2.028-3.131,6.551-4.588,0.234,0.335L104.3,46.071c-0.079-.111-0.156-0.224-0.235-0.335h0Zm-2.251-2.876,6.139-5.152,0.263,0.313-6.138,5.151Q101.949,43.016,101.815,42.86Zm-2.488-2.67L105,34.513l0.292,0.287-5.674,5.675Zm-2.708-2.446,5.165-6.157,0.316,0.264-5.166,6.158c-0.107-.088-0.21-0.177-0.315-0.264h0Zm-2.912-2.2,4.616-6.594,0.335,0.234-4.615,6.592-0.335-.228v0Zm-3.049-1.915L94.721,26.6l0.354,0.2-4.062,7.036ZM87.37,31.946l3.413-7.316,0.371,0.17-3.412,7.319c-0.124-.055-0.247-0.113-0.371-0.17v0Zm-3.378-1.367,2.766-7.6,0.384,0.14-2.764,7.6c-0.127-.048-0.257-0.092-0.385-0.137v0ZM80.51,29.512l2.1-7.822L83,21.8l-2.1,7.819C80.773,29.584,80.642,29.547,80.51,29.512Zm-3.563-.755,1.409-7.991,0.4,0.071-1.405,7.987c-0.134-.024-0.269-0.044-0.4-0.066h0Zm-3.613-.445,0.708-8.1,0.407,0.036-0.708,8.1C73.605,28.336,73.47,28.323,73.334,28.312ZM70,28.18H69.693V20H70.1v8.181H70Zm-3.939.186L65.35,20.243l0.407-.036,0.711,8.123Zm-3.6.494-1.42-8.032,0.4-.071,1.418,8.033Zm-3.546.809L56.8,21.787l0.4-.106,2.111,7.881Zm-3.462,1.114-2.8-7.671,0.384-.14,2.791,7.671ZM52.1,32.2l-3.452-7.4,0.37-.173,3.452,7.4Zm-3.263,1.73L44.721,26.8l0.354-.2,4.112,7.122c-0.118.065-.235,0.136-0.352,0.2ZM45.654,36l-4.683-6.69,0.335-.234,4.682,6.688Zm-2.861,2.246-5.251-6.259,0.313-.263,5.25,6.258c-0.1.083-.2,0.171-0.311,0.259v0.005Zm-2.655,2.485L34.36,34.947l0.289-.289,5.775,5.776c-0.1.1-.19,0.2-0.285,0.292v0.005Zm-2.433,2.7L31.448,38.18l0.263-.313,6.257,5.251c-0.087.1-.176,0.206-0.263,0.311v0Zm-2.187,2.906L28.83,41.65l0.234-.335L35.751,46q-0.117.166-.233,0.335v0ZM33.65,49.311l-7.156-4.134,0.2-.354,7.157,4.132c-0.064.118-.133,0.235-0.2,0.354v0ZM31.939,52.65l-7.39-3.45,0.173-.37,7.39,3.447C32.055,52.4,32,52.526,31.939,52.65Zm-1.363,3.373-7.658-2.788,0.14-.384,7.654,2.786C30.665,55.766,30.621,55.9,30.576,56.023ZM29.509,59.5l-7.865-2.106L21.75,57l7.866,2.108C29.58,59.239,29.543,59.37,29.509,59.5Zm-0.753,3.563-8.018-1.414,0.071-.4,8.014,1.411C28.8,62.794,28.778,62.928,28.756,63.063Zm-0.445,3.612L20.2,65.966l0.036-.407,8.107,0.709C28.336,66.4,28.322,66.539,28.311,66.675ZM28.18,70v0.307H20V69.9h8.181C28.181,69.932,28.18,69.966,28.18,70Zm0.186,3.939-8.092.708-0.036-.407,8.091-.708Q28.347,73.736,28.366,73.939Zm0.5,3.608-7.984,1.408-0.071-.4,7.984-1.411C28.813,77.279,28.836,77.413,28.861,77.547ZM29.672,81.1l-7.819,2.1-0.106-.4,7.818-2.1C29.6,80.836,29.636,80.967,29.672,81.1Zm1.117,3.468L23.2,87.332l-0.14-.384,7.593-2.764,0.141,0.383h0Zm1.418,3.358-7.315,3.41-0.173-.37,7.315-3.412c0.058,0.124.115,0.246,0.174,0.37v0Zm1.648,3.12L26.7,95.177l-0.2-.354,7.156-4.132c0.062,0.119.131,0.236,0.2,0.354h0Zm1.931,3.008-6.6,4.625-0.234-.335,6.608-4.627,0.232,0.336h0Zm2.228,2.886-6.172,5.18-0.263-.313,6.171-5.179,0.265,0.311h0Zm2.468,2.685-5.689,5.69-0.293-.29,5.7-5.692c0.092,0.1.186,0.2,0.283,0.291h0Zm2.694,2.459-5.164,6.156-0.312-.263,5.166-6.158Zm2.9,2.218-4.6,6.572-0.335-.234,4.6-6.572c0.109,0.078.222,0.155,0.333,0.232Zm3.113,1.98L45.075,113.4l-0.354-.2,4.114-7.126c0.117,0.068.234,0.139,0.352,0.207h0Zm3.206,1.66-3.374,7.238-0.37-.173,3.374-7.238,0.368,0.172h0Zm3.376,1.394-2.726,7.492-0.384-.14,2.727-7.493Zm3.488,1.09L57.2,118.117l-0.4-.105,2.061-7.694Zm3.57,0.78-1.382,7.836-0.4-.071,1.382-7.837Zm3.626,0.464-0.695,7.922-0.407-.036,0.693-7.923ZM70,111.82h0.1V120H69.693v-8.184C69.8,111.817,69.9,111.82,70,111.82Zm3.756-.17,0.691,7.9-0.407.036-0.691-7.9C73.485,111.676,73.62,111.662,73.756,111.65Zm3.627-.48,1.374,7.791-0.4.071-1.374-7.8c0.131-.022.266-0.043,0.4-0.067h0Zm3.57-.8L83,118l-0.395.106-2.045-7.633c0.13-.033.261-0.073,0.393-0.105v0Zm3.488-1.109,2.7,7.418-0.384.14-2.7-7.421c0.127-.047.256-0.092,0.384-0.139v0Zm3.376-1.416L91.151,115l-0.37.173-3.335-7.153Zm3.2-1.68,4.058,7.035-0.354.2-4.062-7.036Zm2.944-1.884,4.534,6.477-0.335.234-4.535-6.478Zm2.9-2.228,5.081,6.057-0.313.263-5.081-6.057c0.1-.088.208-0.177,0.312-0.264h0Zm2.7-2.47,5.587,5.588-0.289.289-5.59-5.591c0.1-.1.195-0.191,0.292-0.287h0Zm2.472-2.7,6.053,5.08-0.263.313L101.769,97.2Zm2.23-2.9,6.47,4.531-0.234.335-6.471-4.532c0.079-.117.157-0.225,0.235-0.336v0Zm2.037-3.2,7,4.043-0.2.354-7-4.044c0.061-.121.132-0.236,0.2-0.356v0Zm1.626-3.142,7.154,3.337-0.173.37-7.154-3.337c0.059-.125.115-0.249,0.173-0.372v0Zm1.4-3.383,7.419,2.7-0.14.384-7.421-2.7c0.047-.13.095-0.257,0.142-0.386v0Zm1.093-3.493,7.633,2.046-0.106.395-7.634-2.046c0.037-.133.072-0.265,0.107-0.4v0Zm0.781-3.577,7.791,1.374-0.071.4-7.791-1.374C111.155,77.456,111.179,77.323,111.2,77.188Zm0.465-3.629,7.893,0.691-0.036.407-7.894-.691c0.015-.135.029-0.271,0.04-0.407h0Z"/>




</g>


{/* <g>




<text x="130" y="70" font-size="5" text-anchor="start" transform="rotate(180 130 70)">0</text>
  <text x="125" y="100" font-size="5" text-anchor="start" transform="rotate(210 125 100)">30</text>
  <text x="105" y="120" font-size="5" text-anchor="start" transform="rotate(240 105 120)">60</text>
  <text x="70" y="125" font-size="5" text-anchor="start" transform="rotate(270 70 125)">90</text>
  <text x="35" y="120" font-size="5" text-anchor="start" transform="rotate(300 35 120)">120</text>
  <text x="15" y="100" font-size="5" text-anchor="start" transform="rotate(330 15 100)">150</text>
  <text x="10" y="70" font-size="5" text-anchor="start" transform="rotate(0 10 70)">180</text>
  <text x="15" y="40" font-size="5" text-anchor="start" transform="rotate(30 15 40)">210</text>
  <text x="35" y="20" font-size="5" text-anchor="start" transform="rotate(60 35 20)">240</text>
  <text x="70" y="15" font-size="5" text-anchor="start" transform="rotate(90 70 15)">270</text>
  <text x="105" y="20" font-size="5" text-anchor="start" transform="rotate(120 105 20)">300</text>
  <text x="125" y="40" font-size="5" text-anchor="start" transform="rotate(150 125 40)">330</text>



</g> */}








      

      <circle
        //      data-opacity="0"
        cx="50%"
        cy="50%"
        r="35"

        stroke="currentcolor"
        data-stroke="main"
        strokeWidth="2"
        fill="none"

        pathLength="100"
        strokeDasharray={`${(value / max) * 100} 100`}
        // strokeDashoffset={offset}
        // transform={`rotate(-90 ${size / 2} ${size / 2})`}
        data-duration=".325"
        data-delay="4"
        data-transition-prop="stroke-dasharray"
      />
    </svg>
  );
};

export default GaugeZoom;
